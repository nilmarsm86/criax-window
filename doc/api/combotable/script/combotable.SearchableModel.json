{"attributes": {"name": "SearchableModel", "hasWarning": true, "packageName": "combotable", "superClass": "qx.ui.table.model.Simple", "fullName": "combotable.SearchableModel", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Add searchString property to the Simple model. The searching will always happen on the second column.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 108, "name": "_applySearchString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "newString"}, "type": "param", "children": [{"attributes": {"text": "<p>old string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "oldString"}, "type": "param", "children": [{"attributes": {"text": "<p>new string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>As the search string is changed, re-filter the content of the table</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "combotable.SearchableModel#searchString"}, "type": "entry"}]}]}, {"attributes": {"line": 74, "hasError": true, "name": "addRows"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "rowArr"}, "type": "param"}, {"attributes": {"name": "startIndex"}, "type": "param"}, {"attributes": {"name": "clearSorting"}, "type": "param"}]}, {"attributes": {"text": "<p>Overridden from {@link qx.ui.table.model.Simple}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>rowArr</code> is not documented.", "column": 19, "line": 74}, "type": "error"}, {"attributes": {"msg": "Parameter <code>startIndex</code> is not documented.", "column": 19, "line": 74}, "type": "error"}, {"attributes": {"msg": "Parameter <code>clearSorting</code> is not documented.", "column": 19, "line": 74}, "type": "error"}]}]}, {"attributes": {"name": "getAnchorFront", "fromProperty": "anchorFront"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>anchorFront</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #anchorFront}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>anchorFront</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSearchAsRegEx", "fromProperty": "searchAsRegEx"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>searchAsRegEx</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #searchAsRegEx}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>searchAsRegEx</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSearchString", "fromProperty": "searchString"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>searchString</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #searchString}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>searchString</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initAnchorFront", "fromProperty": "anchorFront"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>anchorFront</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>anchorFront</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #anchorFront}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initSearchAsRegEx", "fromProperty": "searchAsRegEx"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>searchAsRegEx</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>searchAsRegEx</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #searchAsRegEx}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initSearchString", "fromProperty": "searchString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>searchString</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>searchString</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #searchString}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 94, "hasError": true, "name": "removeRows"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "startIndex"}, "type": "param"}, {"attributes": {"name": "howMany"}, "type": "param"}, {"attributes": {"name": "clearSorting"}, "type": "param"}]}, {"attributes": {"text": "<p>Overridden from {@link qx.ui.table.model.Simple}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>startIndex</code> is not documented.", "column": 22, "line": 94}, "type": "error"}, {"attributes": {"msg": "Parameter <code>howMany</code> is not documented.", "column": 22, "line": 94}, "type": "error"}, {"attributes": {"msg": "Parameter <code>clearSorting</code> is not documented.", "column": 22, "line": 94}, "type": "error"}]}]}, {"attributes": {"name": "resetAnchorFront", "fromProperty": "anchorFront"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>anchorFront</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #anchorFront}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSearchAsRegEx", "fromProperty": "searchAsRegEx"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>searchAsRegEx</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #searchAsRegEx}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSearchString", "fromProperty": "searchString"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>searchString</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #searchString}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAnchorFront", "fromProperty": "anchorFront"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>anchorFront</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>anchorFront</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #anchorFront}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 63, "hasError": true, "name": "setData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "rowArr"}, "type": "param"}, {"attributes": {"name": "clearSorting"}, "type": "param"}, {"attributes": {"name": "filtered"}, "type": "param"}]}, {"attributes": {"text": "<p>Overridden from {@link qx.ui.table.model.Simple} with an additional\nargument tucked at the end to tell the model if the input is to be\nstored for filtering or is the output of the filtering operation.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>rowArr</code> is not documented.", "column": 19, "line": 63}, "type": "error"}, {"attributes": {"msg": "Parameter <code>clearSorting</code> is not documented.", "column": 19, "line": 63}, "type": "error"}, {"attributes": {"msg": "Parameter <code>filtered</code> is not documented.", "column": 19, "line": 63}, "type": "error"}]}]}, {"attributes": {"line": 83, "hasError": true, "name": "setRows"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "rowArr"}, "type": "param"}, {"attributes": {"name": "startIndex"}, "type": "param"}, {"attributes": {"name": "clearSorting"}, "type": "param"}]}, {"attributes": {"text": "<p>Overridden from {@link qx.ui.table.model.Simple}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>rowArr</code> is not documented.", "column": 19, "line": 83}, "type": "error"}, {"attributes": {"msg": "Parameter <code>startIndex</code> is not documented.", "column": 19, "line": 83}, "type": "error"}, {"attributes": {"msg": "Parameter <code>clearSorting</code> is not documented.", "column": 19, "line": 83}, "type": "error"}]}]}, {"attributes": {"name": "setSearchAsRegEx", "fromProperty": "searchAsRegEx"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>searchAsRegEx</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>searchAsRegEx</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #searchAsRegEx}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSearchString", "fromProperty": "searchString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>searchString</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>searchString</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #searchString}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Custom check function.", "defaultValue": "false", "name": "anchorFront", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Only search from the start of the string</p>"}, "type": "desc"}]}, {"attributes": {"check": "Custom check function.", "defaultValue": "false", "name": "searchAsRegEx", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Take string as a regular expression</p>"}, "type": "desc"}]}, {"attributes": {"name": "searchString", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applySearchString", "check": "Custom check function."}, "type": "property", "children": [{"attributes": {"text": "<p>The string to search for in the second column of the dataset.</p>"}, "type": "desc"}]}]}]}